{"ast":null,"code":"var _jsxFileName = \"C:\\\\LoginR\\\\frontend\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [score, setScore] = useState(0);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    // Fetch quiz questions from an API or external source\n    axios.get('https://api.example.com/quiz') // Example API endpoint\n    .then(response => {\n      setQuestions(response.data); // Set quiz questions\n    }).catch(error => {\n      console.error('Error fetching questions:', error);\n    });\n  }, []);\n  const handleAnswer = answer => {\n    if (answer === questions[questionIndex].answer) {\n      setScore(score + 1);\n    }\n    setQuestionIndex(questionIndex + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quiz Time!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), questions.length > 0 && questionIndex < questions.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: questions[questionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), questions[questionIndex].options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary me-2\",\n        onClick: () => handleAnswer(option),\n        children: option\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this) : questionIndex >= questions.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Your Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => {\n          setQuestionIndex(0);\n          setScore(0);\n        },\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(Quiz, \"K/Kv2f4KxEfrzEuylv/s+4cgjsY=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Quiz","_s","score","setScore","questionIndex","setQuestionIndex","questions","setQuestions","get","then","response","data","catch","error","console","handleAnswer","answer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","question","options","map","option","idx","onClick","_c","$RefreshReg$"],"sources":["C:/LoginR/frontend/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Quiz() {\r\n    const [score, setScore] = useState(0);\r\n    const [questionIndex, setQuestionIndex] = useState(0);\r\n    const [questions, setQuestions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Fetch quiz questions from an API or external source\r\n        axios.get('https://api.example.com/quiz') // Example API endpoint\r\n            .then(response => {\r\n                setQuestions(response.data); // Set quiz questions\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching questions:', error);\r\n            });\r\n    }, []);\r\n\r\n    const handleAnswer = (answer) => {\r\n        if (answer === questions[questionIndex].answer) {\r\n            setScore(score + 1);\r\n        }\r\n        setQuestionIndex(questionIndex + 1);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Quiz Time!</h2>\r\n            {questions.length > 0 && questionIndex < questions.length ? (\r\n                <div>\r\n                    <h4>{questions[questionIndex].question}</h4>\r\n                    {questions[questionIndex].options.map((option, idx) => (\r\n                        <button\r\n                            key={idx}\r\n                            className=\"btn btn-secondary me-2\"\r\n                            onClick={() => handleAnswer(option)}\r\n                        >\r\n                            {option}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            ) : questionIndex >= questions.length ? (\r\n                <div>\r\n                    <h3>Your Score: {score}</h3>\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => {\r\n                            setQuestionIndex(0);\r\n                            setScore(0);\r\n                        }}\r\n                    >\r\n                        Try Again\r\n                    </button>\r\n                </div>\r\n            ) : (\r\n                <div>Loading questions...</div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}